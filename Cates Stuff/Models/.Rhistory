MA_tapir<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Malaysia (Malayan Tapir)/Collapsed_Capture_Malayan_Tapir.rds")
MA_eff<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Malaysia (Malayan Tapir)/Data Processing/Effort_Malayan_Tapir.rds")
#MA_cv<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Malaysia (Malayan Tapir)/Ma_T_Final_Covs.csv")
MA_cv<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Malaysia (Malayan Tapir)/MA_covs.csv")
MA_umf<- unmarkedFrameOccu(y=MA_tapir[,-1], siteCovs= as.data.frame(scale(MA_cv[,-c(1:5)])), obsCovs=list(Eff=MA_eff[,-1]))
# Running model with Eff as survey covariate
MA_m.psi1.pEff      <- occu(~Eff ~1, MA_umf)  # Eff Model
MA_m.psiElev.pEff   <- occu(~Eff ~Elev, MA_umf)
MA_m.psiPrec.pEff   <- occu(~Eff ~Precip, MA_umf)
MA_m.psiRoad.pEff <- occu(~Eff ~d.Road, MA_umf)
MA_m.psiTempmax.pEff<- occu(~Eff ~AvgMaxTemp, MA_umf)
MA_m.psiNDVI.pEff   <- occu(~Eff ~NDVI, MA_umf)
MA_m.psiTempmin.pEff<- occu(~Eff ~AvgMinTemp, MA_umf)
MA_m.psiHFI.pEff    <- occu(~Eff ~HFI, MA_umf)
MA_m.psiNPP.pEff    <- occu(~Eff ~NPP, MA_umf)
#detList is the name of the list, fitList compares the models with each other
#detList.tapir<-fitList(mod0, m.psi1.pEff, m.p1.psiHFI, m.p1.psiElev, m.p1.psiPrec, m.pEff.psiPrec, m.pEff.psiElev, m.pEff.psiHFI)
MA_detlist <-fitList(MA_m.psi1.pEff      ,
MA_m.psiElev.pEff   ,
MA_m.psiPrec.pEff   ,
MA_m.psiRoad.pEff ,
MA_m.psiTempmax.pEff,
MA_m.psiNDVI.pEff   ,
MA_m.psiHFI.pEff    ,
MA_m.psiTempmin.pEff,
MA_m.psiNPP.pEff
)
# modSel compares AND ranks the models against eachother!
modSel(MA_detlist)
names(MA_cv)
columns<- c(6,7,9:13)
sink("MA_mods.txt", append = FALSE)
print("**Malayan Tapir Models**")
modSel(MA_detlist)
cat("\n**P and 𝜓**\n")
getStats()
cat("\n***Correlation Matrix***\n")
cor(MA_cov[, columns])
sink()
#MA_cv<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Malaysia (Malayan Tapir)/Ma_T_Final_Covs.csv")
MA_cov<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Malaysia (Malayan Tapir)/MA_covs.csv")
MA_umf<- unmarkedFrameOccu(y=MA_tapir[,-1], siteCovs= as.data.frame(scale(MA_cov[,-c(1:5)])), obsCovs=list(Eff=MA_eff[,-1]))
# Running model with Eff as survey covariate
MA_m.psi1.pEff      <- occu(~Eff ~1, MA_umf)  # Eff Model
MA_m.psiElev.pEff   <- occu(~Eff ~Elev, MA_umf)
MA_m.psiPrec.pEff   <- occu(~Eff ~Precip, MA_umf)
MA_m.psiRoad.pEff <- occu(~Eff ~d.Road, MA_umf)
MA_m.psiTempmax.pEff<- occu(~Eff ~AvgMaxTemp, MA_umf)
MA_m.psiNDVI.pEff   <- occu(~Eff ~NDVI, MA_umf)
MA_m.psiTempmin.pEff<- occu(~Eff ~AvgMinTemp, MA_umf)
MA_m.psiHFI.pEff    <- occu(~Eff ~HFI, MA_umf)
MA_m.psiNPP.pEff    <- occu(~Eff ~NPP, MA_umf)
#detList is the name of the list, fitList compares the models with each other
#detList.tapir<-fitList(mod0, m.psi1.pEff, m.p1.psiHFI, m.p1.psiElev, m.p1.psiPrec, m.pEff.psiPrec, m.pEff.psiElev, m.pEff.psiHFI)
MA_detlist <-fitList(MA_m.psi1.pEff      ,
MA_m.psiElev.pEff   ,
MA_m.psiPrec.pEff   ,
MA_m.psiRoad.pEff ,
MA_m.psiTempmax.pEff,
MA_m.psiNDVI.pEff   ,
MA_m.psiHFI.pEff    ,
MA_m.psiTempmin.pEff,
MA_m.psiNPP.pEff
)
# modSel compares AND ranks the models against eachother!
modSel(MA_detlist)
columns<- c(6,7,9:13)
getStats<- function(...){
#function for psi value
pf <- function(x) {
occu <- 0
if(length(x@estimates@estimates$state@estimates) > 2) {
for(i in 2:length(x@estimates@estimates$state@estimates)) {
occu <- (occu + plogis(x@estimates@estimates$state@estimates[i]))
}
occu <- occu/(length(x@estimates@estimates$state@estimates)-1)
} else {
occu <- plogis(x@estimates@estimates$state@estimates[2])
}
print(paste("𝜓= ", signif(occu, digits = 4)))
}
# Function to give detection probabilities (p) for models
pd <- function(x) {
detp <- 0
if(length(x@estimates@estimates$det@estimates) > 2) {
for(i in 2:length(x@estimates@estimates$det@estimates)) {
detp <- (detp + plogis(x@estimates@estimates$det@estimates[i]))
}
detp <- detp/(length(x@estimates@estimates$det@estimates)-1)
} else {
detp <- plogis(x@estimates@estimates$det@estimates[2])
}
print(paste("p= ", signif(detp, digits=4)))
}
#function of both funcs
pfpd<- function(x){
#print(x@formula)
pf(x)
pd(x)
}
#get objects in the parent environment (functions don't have access to local env)
objs<- ls(envir = parent.frame())
models<- objs[grepl("^MT_m\\.|^MA_m\\.|^CR_m\\.|^AM_m\\.|^.*_m\\.*.", objs)]
#sink("C:/Users/chris/Tapirus-Research/Cates Stuff/Models/unicovariateModselAll.txt", append = TRUE)
print(models); cat("\n")
for (model in models){
print(model)
pfpd(get(model))
cat("\n")
}
#sink()
}
sink("MA_mods.txt", append = FALSE)
print("**Malayan Tapir Models**")
modSel(MA_detlist)
cat("\n**P and 𝜓**\n")
getStats()
cat("\n***Correlation Matrix***\n")
cor(MA_cov[, columns])
sink()
#read in covariate table
AM_cov<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/cv_t_AM_v2.csv")
#scale covariates
AM_cov<- cbind(AM_cov[,c(1:4)], round(scale(AM_cov[,5:ncol(AM_cov)]),3))
AM_umf<- unmarkedFrameOccu(y=AM_tapir, siteCovs=AM_cov, obsCovs=list(Eff=AM_eff))
#read in tapir occurance records
AM_tapir<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/tapir_AM.rds")
rm(list=ls())
setwd("C:/Users/chris/Tapirus-Research/Cates Stuff/Models")
library(unmarked)
#read in tapir occurance records
AM_tapir<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/tapir_AM.rds")
#read in effort table
AM_eff<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/eff_AM.rds")
#read in covariate table
AM_cov<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/cv_t_AM_v2.csv")
head(AM_cov,1)
names(MA_cov)
names(AM_cov)
#scale covariates
AM_cov<- cbind(AM_cov[,c(1:4)], round(scale(AM_cov[,5:ncol(AM_cov)]),3))
AM_umf<- unmarkedFrameOccu(y=AM_tapir, siteCovs=AM_cov, obsCovs=list(Eff=AM_eff))
# Running model with Eff as survey covariate
AM_m.psi1.pEff      <- occu(~Eff~ 1, AM_umf)
AM_m.psiElev.pEff   <- occu(~Eff~ Elev , AM_umf)
AM_m.psiRoad.pEff   <- occu(~Eff~ d.Road , AM_umf)
AM_m.psiNDVI.pEff   <- occu(~Eff~ NDVI , AM_umf)
AM_m.psiTempmax.pEff<- occu(~Eff~ Avg.Max.Temp , AM_umf)
AM_m.psiPrecip.pEff <- occu(~Eff~ MAP , AM_umf)
AM_m.psiNPP.pEff    <- occu(~Eff~ NPP , AM_umf)
AM_m.psiHFI.pEff    <- occu(~Eff~ HFI , AM_umf)
AM_m.psiTempmin.pEff<- occu(~Eff~ Avg.Min.Temp, AM_umf)
##collect in fitList
AM_detlist<-fitList(AM_m.psi1.pEff     ,
AM_m.psiElev.pEff  ,
AM_m.psiRoad.pEff  ,
AM_m.psiNDVI.pEff  ,
AM_m.psiTempmax.pEff  ,
AM_m.psiPrecip.pEff,
AM_m.psiNPP.pEff   ,
AM_m.psiHFI.pEff   ,
AM_m.psiTempmin.pEff
# AM_m.psiFor.pEff   ,
# AM_m.psiReg.pEff   ,
# AM_m.psiWat.pEff   ,
# AM_m.psiDC.pEff    ,
# AM_m.psiPD.pEff    ,
# AM_m.psiED.pEff    ,
# AM_m.psiRiver.pEff ,
)
##do AIC model selection
modSel(AM_detlist)
sink("AM_mods.txt", append = FALSE)
sink()
sink("AM_mods.txt", append = FALSE)
print("**Lowland Tapir Models**")
modSel(AM_detlist)
cat("\n**P and 𝜓**\n")
getStats()
getStats<- function(...){
#function for psi value
pf <- function(x) {
occu <- 0
if(length(x@estimates@estimates$state@estimates) > 2) {
for(i in 2:length(x@estimates@estimates$state@estimates)) {
occu <- (occu + plogis(x@estimates@estimates$state@estimates[i]))
}
occu <- occu/(length(x@estimates@estimates$state@estimates)-1)
} else {
occu <- plogis(x@estimates@estimates$state@estimates[2])
}
print(paste("𝜓= ", signif(occu, digits = 4)))
}
# Function to give detection probabilities (p) for models
pd <- function(x) {
detp <- 0
if(length(x@estimates@estimates$det@estimates) > 2) {
for(i in 2:length(x@estimates@estimates$det@estimates)) {
detp <- (detp + plogis(x@estimates@estimates$det@estimates[i]))
}
detp <- detp/(length(x@estimates@estimates$det@estimates)-1)
} else {
detp <- plogis(x@estimates@estimates$det@estimates[2])
}
print(paste("p= ", signif(detp, digits=4)))
}
#function of both funcs
pfpd<- function(x){
#print(x@formula)
pf(x)
pd(x)
}
#get objects in the parent environment (functions don't have access to local env)
objs<- ls(envir = parent.frame())
models<- objs[grepl("^MT_m\\.|^MA_m\\.|^CR_m\\.|^AM_m\\.|^.*_m\\.*.", objs)]
#sink("C:/Users/chris/Tapirus-Research/Cates Stuff/Models/unicovariateModselAll.txt", append = TRUE)
print(models); cat("\n")
for (model in models){
print(model)
pfpd(get(model))
cat("\n")
}
#sink()
}
getStats()
cat("\n***Correlation Matrix***\n")
cor(AM_cov[, columns])
#print p and psi
#function in printPandPsi.R (C:/Users/chris/Tapirus-Research/Cates Stuff/Models/unicovariateModels/printPandPsi.R)
columns<- c(5, 7:18)
cor(AM_cov[, columns])
sink()
sink("AM_mods.txt", append = FALSE)
#print p and psi
#function in printPandPsi.R (C:/Users/chris/Tapirus-Research/Cates Stuff/Models/unicovariateModels/printPandPsi.R)
columns<- c(5, 7:18)
sink("AM_mods.txt", append = FALSE)
print("**Lowland Tapir Models**")
modSel(AM_detlist)
cat("\n**P and 𝜓**\n")
getStats()
cat("\n***Correlation Matrix***\n")
cor(AM_cov[, columns])
sink()
sink()
rm(list=ls())
library(unmarked)
setwd("C:/Users/chris/Documents/Research/Tapir Research/Code and Data/all Tapir's data/Costa Rica (Baird Tapir)")#Directory of R-project "Models" on github
#occurance recs
CR_tapir<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Costa Rica (Baird Tapir)/Scripts/tapir_CR.rds")
#setwd("C:/Users/chris/Documents/Research/Tapir Research/Code and Data/all Tapir's data/Costa Rica (Baird Tapir)")#Directory of R-project "Models" on github
setwd("C:/Users/chris/Tapirus-Research/Cates Stuff/Models")
#occurance recs
CR_tapir<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Costa Rica (Baird Tapir)/Scripts/tapir_CR.rds")
#effort table
CR_eff<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Costa Rica (Baird Tapir)/Scripts/eff_CR.rds")
#covariates
CR_cv<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Costa Rica (Baird Tapir)/cv_t3.csv")
CR_umf<- unmarkedFrameOccu(y=CR_tapir, siteCovs= as.data.frame(scale(CR_cv[,-c(1:5)])), obsCovs=list(Eff=CR_eff))
#-----------------------------------------------------------------------
# Running models
CR_m.psi1.pEff		    <- occu(~Eff~ 1, CR_umf)
CR_m.psiElev.pEff	    <- occu(~Eff~ Elev , CR_umf)
CR_m.psiRoad.pEff	    <- occu(~Eff~ d.Road , CR_umf)
CR_m.psiTempmax.pEff  <- occu(~Eff~ Avg.Max.Temp, CR_umf)
CR_m.psiTempmin.pEff  <- occu(~Eff~ Avg.Min.Temp, CR_umf)
CR_m.psiNDVI.pEff	    <- occu(~Eff~ NDVI, CR_umf)
CR_m.psiPrecp.Eff     <- occu(~Eff~ Precip, CR_umf)
CR_m.psiNPP.pEff	    <- occu(~Eff~ NPP ,CR_umf)
CR_m.psiHFI.pEff	    <- occu(~Eff~ HFI ,CR_umf)
##>> collect in fitList
CR_detlist<-fitList(CR_m.psi1.pEff		,
CR_m.psiElev.pEff	,
CR_m.psiRoad.pEff	,
CR_m.psiNDVI.pEff	,
CR_m.psiPrecp.Eff ,
CR_m.psiTempmax.pEff,
CR_m.psiTempmin.pEff,
CR_m.psiNPP.pEff	,
CR_m.psiHFI.pEff
# CR_m.psiFor.pEff	,
# CR_m.psiDC.pEff		,
# CR_m.psiPD.pEff		,
# CR_m.psiED.pEff		,
# CR_m.psiRiver.pEff	,
)
##do AIC model selection
modSel(CR_detlist)
names(CR_cv)
columns<- c(6, 8:18)
sink("CR_mods.txt", append = FALSE)
print("**Baird Tapir Models**")
modSel(CR_detlist)
cat("\n**P and 𝜓**\n")
getStats()
getStats<- function(...){
#function for psi value
pf <- function(x) {
occu <- 0
if(length(x@estimates@estimates$state@estimates) > 2) {
for(i in 2:length(x@estimates@estimates$state@estimates)) {
occu <- (occu + plogis(x@estimates@estimates$state@estimates[i]))
}
occu <- occu/(length(x@estimates@estimates$state@estimates)-1)
} else {
occu <- plogis(x@estimates@estimates$state@estimates[2])
}
print(paste("𝜓= ", signif(occu, digits = 4)))
}
# Function to give detection probabilities (p) for models
pd <- function(x) {
detp <- 0
if(length(x@estimates@estimates$det@estimates) > 2) {
for(i in 2:length(x@estimates@estimates$det@estimates)) {
detp <- (detp + plogis(x@estimates@estimates$det@estimates[i]))
}
detp <- detp/(length(x@estimates@estimates$det@estimates)-1)
} else {
detp <- plogis(x@estimates@estimates$det@estimates[2])
}
print(paste("p= ", signif(detp, digits=4)))
}
#function of both funcs
pfpd<- function(x){
#print(x@formula)
pf(x)
pd(x)
}
#get objects in the parent environment (functions don't have access to local env)
objs<- ls(envir = parent.frame())
models<- objs[grepl("^MT_m\\.|^MA_m\\.|^CR_m\\.|^AM_m\\.|^.*_m\\.*.", objs)]
#sink("C:/Users/chris/Tapirus-Research/Cates Stuff/Models/unicovariateModselAll.txt", append = TRUE)
print(models); cat("\n")
for (model in models){
print(model)
pfpd(get(model))
cat("\n")
}
#sink()
}
getStats()
cat("\n***Correlation Matrix***\n")
cor(CR_cov[, columns])
cor(CR_cv[, columns])
sink()
#set wd
setwd("C:/Users/chris/Tapirus-Research/Cates Stuff/Models")
######Read in Tapir table and Effort###########
MA_tapir<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Malaysia (Malayan Tapir)/Collapsed_Capture_Malayan_Tapir.rds")
MA_eff<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Malaysia (Malayan Tapir)/Data Processing/Effort_Malayan_Tapir.rds")
#MA_cv<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Malaysia (Malayan Tapir)/Ma_T_Final_Covs.csv")
MA_cov<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Malaysia (Malayan Tapir)/MA_covs.csv")
MA_umf<- unmarkedFrameOccu(y=MA_tapir[,-1], siteCovs= as.data.frame(scale(MA_cov[,-c(1:5)])), obsCovs=list(Eff=MA_eff[,-1]))
# Running model with Eff as survey covariate
MA_m.psi1.pEff      <- occu(~Eff ~1, MA_umf)  # Eff Model
MA_m.psiElev.pEff   <- occu(~Eff ~Elev, MA_umf)
MA_m.psiPrec.pEff   <- occu(~Eff ~Precip, MA_umf)
MA_m.psiRoad.pEff <- occu(~Eff ~d.Road, MA_umf)
MA_m.psiTempmax.pEff<- occu(~Eff ~AvgMaxTemp, MA_umf)
MA_m.psiNDVI.pEff   <- occu(~Eff ~NDVI, MA_umf)
MA_m.psiTempmin.pEff<- occu(~Eff ~AvgMinTemp, MA_umf)
MA_m.psiHFI.pEff    <- occu(~Eff ~HFI, MA_umf)
MA_m.psiNPP.pEff    <- occu(~Eff ~NPP, MA_umf)
#detList is the name of the list, fitList compares the models with each other
#detList.tapir<-fitList(mod0, m.psi1.pEff, m.p1.psiHFI, m.p1.psiElev, m.p1.psiPrec, m.pEff.psiPrec, m.pEff.psiElev, m.pEff.psiHFI)
MA_detlist <-fitList(MA_m.psi1.pEff      ,
MA_m.psiElev.pEff   ,
MA_m.psiPrec.pEff   ,
MA_m.psiRoad.pEff ,
MA_m.psiTempmax.pEff,
MA_m.psiNDVI.pEff   ,
MA_m.psiHFI.pEff    ,
MA_m.psiTempmin.pEff,
MA_m.psiNPP.pEff
)
# modSel compares AND ranks the models against eachother!
modSel(MA_detlist)
names(MA_cov)
columns<- c(6:13)
sink("MA_mods.txt", append = FALSE)
print("**Malayan Tapir Models**")
modSel(MA_detlist)
cat("\n**P and 𝜓**\n")
getStats()
cat("\n***Correlation Matrix***\n")
cor(MA_cov[, columns])
sink()
rm(list=ls())
setwd("C:/Users/chris/Tapirus-Research/Cates Stuff/Models")
library(unmarked)
#read in tapir occurance records
AM_tapir<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/tapir_AM.rds")
#read in effort table
AM_eff<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/eff_AM.rds")
#read in covariate table
AM_cov<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/cv_t_AM_v2.csv")
#scale covariates
AM_cov<- cbind(AM_cov[,c(1:4)], round(scale(AM_cov[,5:ncol(AM_cov)]),3))
names(AM_cov)
#scale covariates
AM_cov<- cbind(AM_cov[,c(1:4)], round(scale(AM_cov[,5:ncol(AM_cov)]),3))
rm(list=ls())
setwd("C:/Users/chris/Tapirus-Research/Cates Stuff/Models")
library(unmarked)
#read in tapir occurance records
AM_tapir<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/tapir_AM.rds")
#read in effort table
AM_eff<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/eff_AM.rds")
#read in covariate table
AM_cov<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/cv_t_AM_v2.csv")
#scale covariates
AM_cov<- cbind(AM_cov[,c(1:4)], round(scale(AM_cov[,5:ncol(AM_cov)]),3))
AM_umf<- unmarkedFrameOccu(y=AM_tapir, siteCovs=AM_cov, obsCovs=list(Eff=AM_eff))
# Running model with Eff as survey covariate
AM_m.psi1.pEff      <- occu(~Eff~ 1, AM_umf)
AM_m.psiElev.pEff   <- occu(~Eff~ Elev , AM_umf)
AM_m.psiRoad.pEff   <- occu(~Eff~ d.Road , AM_umf)
AM_m.psiNDVI.pEff   <- occu(~Eff~ NDVI , AM_umf)
AM_m.psiTempmax.pEff<- occu(~Eff~ Avg.Max.Temp , AM_umf)
AM_m.psiPrecip.pEff <- occu(~Eff~ MAP , AM_umf)
AM_m.psiNPP.pEff    <- occu(~Eff~ NPP , AM_umf)
AM_m.psiHFI.pEff    <- occu(~Eff~ HFI , AM_umf)
AM_m.psiTempmin.pEff<- occu(~Eff~ Avg.Min.Temp, AM_umf)
##collect in fitList
AM_detlist<-fitList(AM_m.psi1.pEff     ,
AM_m.psiElev.pEff  ,
AM_m.psiRoad.pEff  ,
AM_m.psiNDVI.pEff  ,
AM_m.psiTempmax.pEff  ,
AM_m.psiPrecip.pEff,
AM_m.psiNPP.pEff   ,
AM_m.psiHFI.pEff   ,
AM_m.psiTempmin.pEff
# AM_m.psiFor.pEff   ,
# AM_m.psiReg.pEff   ,
# AM_m.psiWat.pEff   ,
# AM_m.psiDC.pEff    ,
# AM_m.psiPD.pEff    ,
# AM_m.psiED.pEff    ,
# AM_m.psiRiver.pEff ,
)
##do AIC model selection
modSel(AM_detlist)
#print p and psi
#function in printPandPsi.R (C:/Users/chris/Tapirus-Research/Cates Stuff/Models/unicovariateModels/printPandPsi.R)
columns<- c(5:18)
sink("AM_mods.txt", append = FALSE)
print("**Lowland Tapir Models**")
modSel(AM_detlist)
cat("\n**P and 𝜓**\n")
getStats()
cat("\n***Correlation Matrix***\n")
cor(AM_cov[, columns])
sink()
getStats<- function(...){
#function for psi value
pf <- function(x) {
occu <- 0
if(length(x@estimates@estimates$state@estimates) > 2) {
for(i in 2:length(x@estimates@estimates$state@estimates)) {
occu <- (occu + plogis(x@estimates@estimates$state@estimates[i]))
}
occu <- occu/(length(x@estimates@estimates$state@estimates)-1)
} else {
occu <- plogis(x@estimates@estimates$state@estimates[2])
}
print(paste("𝜓= ", signif(occu, digits = 4)))
}
# Function to give detection probabilities (p) for models
pd <- function(x) {
detp <- 0
if(length(x@estimates@estimates$det@estimates) > 2) {
for(i in 2:length(x@estimates@estimates$det@estimates)) {
detp <- (detp + plogis(x@estimates@estimates$det@estimates[i]))
}
detp <- detp/(length(x@estimates@estimates$det@estimates)-1)
} else {
detp <- plogis(x@estimates@estimates$det@estimates[2])
}
print(paste("p= ", signif(detp, digits=4)))
}
#function of both funcs
pfpd<- function(x){
#print(x@formula)
pf(x)
pd(x)
}
#get objects in the parent environment (functions don't have access to local env)
objs<- ls(envir = parent.frame())
models<- objs[grepl("^MT_m\\.|^MA_m\\.|^CR_m\\.|^AM_m\\.|^.*_m\\.*.", objs)]
#sink("C:/Users/chris/Tapirus-Research/Cates Stuff/Models/unicovariateModselAll.txt", append = TRUE)
print(models); cat("\n")
for (model in models){
print(model)
pfpd(get(model))
cat("\n")
}
#sink()
}
sink("AM_mods.txt", append = FALSE)
print("**Lowland Tapir Models**")
modSel(AM_detlist)
cat("\n**P and 𝜓**\n")
getStats()
cat("\n***Correlation Matrix***\n")
cor(AM_cov[, columns])
sink()
######Read in Elev and HFI Table##############
#MT_cov<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Peru (Mountain Tapir)/Model Selection/Mt_T_Covs4.csv")
MT_cov<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Peru (Mountain Tapir)/MT_covs.csv", comment.char = "#")
View(MT_Cov)
View(MT_cov)
