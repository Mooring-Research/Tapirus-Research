library(readr)
fakedata <- read_csv("School docs/Service learning/fakedata.csv")
View(fakedata)
SELECT * from fakedata limit=10
reticulate::repl_python()
import python
y
Y
reticulate::repl_python()
import python
Y
reticulate::repl_python()
y= sqrt(x)
install miniconda
install.packages(miniconda)
library(reticulate)
install(reticulate)
instal.packages(reticulate)
install.packages("reticulate")
plot(cars)
mean(cars)
mean(cars$speed)
CamSurvey <- read.csv("C:/Users/chris/Documents/SchoolDocs_implemented/University/Unix and Python/Assignments/Assignment 9/CR_Dataset03_North - CR_Dataset03_North - CR_Dataset03_North - CR_Dataset03_North.csv", header=FALSE)
View(CamSurvey)
new_headers <- as.character(data[1,])
# Print the updated dataset
print(CamSurvey)
open(CamSurvey)
CamSurvey
View(CamSurvey)
new_headers <- as.character(data[1,])
View(CamSurvey)
new_headers <- as.string(data[1,])
new_headers <- as.character(data[1,])
CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North <- read.csv("C:/Users/chris/Documents/SchoolDocs_implemented/University/Unix and Python/Assignments/Assignment 9/CR_Dataset03_North - CR_Dataset03_North - CR_Dataset03_North - CR_Dataset03_North.csv")
View(CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North)
data<- CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North
mean(data)
data<- read.csv("CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North")
mean(data$Latitud)
data<- "CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North"
mean(data$Latitud)
Sys.time()
Sys.time()
dir()
cdir
setwd("~Reasearch")
setwd("~Reasearch/")
setwd("~/Reasearch/")
setwd("~/Reasearch")
setwd(""C:\Users\chris\Documents\Research"")
setwd("C:\Users\chris\Documents\Research)
setwd("C:\Users\chris\Documents\Research")
setwd("Users\chris\Documents\Research")
getwd()
maxHR<- function(age){max<- 206.3 â€“ (0.711 x age); return(max)}
maxHR<- function(age){max= 206.3 â€“ (0.711 x age); return(max)}
maxHR<- function(age){max= (206.3 â€“ (0.711 * age)); return(max)}
maxHR<- function(age){max= (206.3 - (0.711 * age)); return(max)}
maxHR(22)
maxHR2<- function(age){ max =217 - (0.85 *age); max}
maxHR(22)
maxHR2(22)
maxHR3<- function(age){max = 202 - (0.55 * age); max }
maxHR3(22)
df<- data.frame(Age = seq(20:70))
View(df)
df$func1<- sapply(df$Age, maxHR)
df
maxHR(22)
df$fun2<- sapply(df$Age, maxHR2)
df$fun3<- sapply(df$Age, maxHR3)
ggplot(df, aes(x = Age)) +
geom_line(aes(y = func1, color = "Function 1")) +
geom_line(aes(y = fun2, color = "Function 2")) +
geom_line(aes(y = fun3, color = "Function 3")) +
labs(x = "x", y = "y", color = "Functions") +
scale_color_manual(values = c("Function 1" = "red", "Function 2" = "blue", "Function 3" = "green")) +
theme_minimal()
require(ggplot2)
ggplot(df, aes(x = Age)) +
geom_line(aes(y = func1, color = "Function 1")) +
geom_line(aes(y = fun2, color = "Function 2")) +
geom_line(aes(y = fun3, color = "Function 3")) +
labs(x = "x", y = "y", color = "Functions") +
scale_color_manual(values = c("Function 1" = "red", "Function 2" = "blue", "Function 3" = "green")) +
theme_minimal()
ggplot(df, aes(x = Age)) +
geom_line(size = 2, aes(y = func1, color = "Function 1")) +
geom_line(aes(y = fun2, color = "Function 2")) +
geom_line(aes(y = fun3, color = "Function 3")) +
labs(x = "x", y = "y", color = "Functions") +
scale_color_manual(values = c("Function 1" = "red", "Function 2" = "blue", "Function 3" = "green")) +
theme_minimal()
ggplot(df, aes(x = Age)) +
geom_line(size = 1, aes(y = func1, color = "Function 1")) +
geom_line(aes(y = fun2, color = "Function 2")) +
geom_line(aes(y = fun3, color = "Function 3")) +
labs(x = "x", y = "y", color = "Functions") +
scale_color_manual(values = c("Function 1" = "red", "Function 2" = "blue", "Function 3" = "green")) +
theme_minimal()
ggplot(df, aes(x = Age)) +
geom_line(size = 1, aes(y = func1, color = "Function 1")) +
geom_line(size = 1, aes(y = fun2, color = "Function 2")) +
geom_line(size = 1, aes(y = fun3, color = "Function 3")) +
labs(x = "x", y = "y", color = "Functions") +
scale_color_manual(values = c("Function 1" = "red", "Function 2" = "blue", "Function 3" = "green")) +
theme_minimal()
getwd()
cd ../
setwd("C:/Users/chris/Documents/Research/Tapir-Research")
setwd("C:/Users/chris/Tapirus-Research/Cates Stuff/Models")
library(unmarked)
#set wd
setwd("C:/Users/chris/Documents/Research/Tapir Research/Code and Data/all Tapir's data/Malaysia (Malayan Tapir)")##Directory of R-project "Models" on github
dir()
######Read in Tapir table and Effort###########
MA_tapir<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Malaysia (Malayan Tapir)/Collapsed_Capture_Malayan_Tapir.rds")
get(wd)
getwd()
m
MA_eff<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Malaysia (Malayan Tapir)/Data Processing/Effort_Malayan_Tapir.rds")
######Read in Elev and HFI Table##############
MA_cov<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Malaysia (Malayan Tapir)/Ma_T_Final_Covs.csv")
MA_umf<- unmarkedFrameOccu(y=MA_tapir[,-1], siteCovs= as.data.frame(scale(MA_cov[,-c(1,2,3,4)])), obsCovs=list(Eff=MA_eff[,-1]))
# Running model with Eff as survey covariate
MA_m.psi1.pEff      <- occu(~Eff~1, MA_umf)  # Eff Model
MA_m.psiElev.pEff   <- occu(~Eff ~Elev, MA_umf)
MA_m.psiPrec.pEff   <- occu(~Eff ~Precip, MA_umf)
MA_mod.psiRoad.pEff <- occu(~Eff ~d.Road, MA_umf)
MA_m.psiTempmax.pEff<- occu(~Eff~ AvgMaxTemp, MA_umf)
MA_m.psiNDVI.pEff   <- occu(~Eff~ NDVI, MA_umf)
MA_m.psiTempmin.pEff<- occu(~Eff~ AvgMinTemp, MA_umf)
MA_m.psiHFI.pEff    <- occu(~Eff ~HFI, MA_umf)
MA_m.psiTempmin.pEff<- occu(~Eff~ Avg.Min.Temp, MA_umf)
#detList is the name of the list, fitList compares the models with each other
#detList.tapir<-fitList(mod0, m.psi1.pEff, m.p1.psiHFI, m.p1.psiElev, m.p1.psiPrec, m.pEff.psiPrec, m.pEff.psiElev, m.pEff.psiHFI)
detListUni.ma <-fitList(MA_m.psi1.pEff      ,
MA_m.psiElev.pEff   ,
MA_m.psiPrec.pEff   ,
MA_mod.psiRoad.pEff ,
MA_m.psiTempmax.pEff,
MA_m.psiNDVI.pEff   ,
MA_m.psiTempmin.pEff,
MA_m.psiHFI.pEff    ,
MA_m.psiTempmin.pEff,
)
# modSel compares AND ranks the models against eachother!
modSel(detListUni.ma)
#detList is the name of the list, fitList compares the models with each other
#detList.tapir<-fitList(mod0, m.psi1.pEff, m.p1.psiHFI, m.p1.psiElev, m.p1.psiPrec, m.pEff.psiPrec, m.pEff.psiElev, m.pEff.psiHFI)
MA_detlist <-fitList(MA_m.psi1.pEff      ,
MA_m.psiElev.pEff   ,
MA_m.psiPrec.pEff   ,
MA_mod.psiRoad.pEff ,
MA_m.psiTempmax.pEff,
MA_m.psiNDVI.pEff   ,
MA_m.psiTempmin.pEff,
MA_m.psiHFI.pEff    ,
MA_m.psiTempmin.pEff
)
# modSel compares AND ranks the models against eachother!
modSel(MA_detlist)
#detList is the name of the list, fitList compares the models with each other
#detList.tapir<-fitList(mod0, m.psi1.pEff, m.p1.psiHFI, m.p1.psiElev, m.p1.psiPrec, m.pEff.psiPrec, m.pEff.psiElev, m.pEff.psiHFI)
MA_detlist <-fitList(MA_m.psi1.pEff      ,
MA_m.psiElev.pEff   ,
MA_m.psiPrec.pEff   ,
MA_mod.psiRoad.pEff ,
MA_m.psiTempmax.pEff,
MA_m.psiNDVI.pEff   ,
MA_m.psiHFI.pEff    ,
MA_m.psiTempmin.pEff
)
# modSel compares AND ranks the models against eachother!
modSel(MA_detlist)
print("Mountain Tapir \n")
sink("unicovariateModselAll.txt", append = TRUE)
print("##Mountain Tapir Model Selection##")
modSel(MA_detlist)
sink()
sink("unicovariateModselAll.txt", append = TRUE)
print(deparse("##Mountain Tapir Model Selection##"))
modSel(MA_detlist)
sink()
print(Mountain Tapir Model Selection)
sink("unicovariateModselAll.txt", append = TRUE)
print("Mountain Tapir Model Selection")
modSel(MA_detlist)
sink()
sink("unicovariateModselAll.txt", append = TRUE)
print("Malayan Tapir Model Selection")
modSel(MA_detlist)
sink()
library(unmarked)
#set wd
setwd("C:/Users/chris/Tapirus-Research/Cates Stuff/Models")#Directory of R-project "Models" on github
dir()#
######Read in Tapir table and Effort###########
MT_tapir<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Peru (Mountain Tapir)/Model Selection/Collapsed_Capture_Mountain_Tapir_revised_DR.rds")
MT_eff<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Peru (Mountain Tapir)/Model Selection/Effort_Mountain_Tapir_revised_DR.rds")
######Read in Elev and HFI Table##############
MT_cov<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Peru (Mountain Tapir)/Model Selection/Mt_T_Covs4.csv")
MT_umf<- unmarkedFrameOccu(y=MT_tapir[,-1], siteCovs= as.data.frame(scale(MT_cov[,-c(1,2,3,4)])), obsCovs=list(Eff=MT_eff[,-1]))
######Running Models!####################################
#Running Null model
MT_mod0              <- occu(~1~1, MT_umf)  # Null Model
MT_m.psi1.pEff       <- occu(~Eff~1, MT_umf)  # Eff Model
MT_m.psiElev.pEff    <- occu(~Eff ~Elev, MT_umf)
MT_m.psiPrec.pEff    <- occu(~Eff ~Precip, MT_umf)
MT_m.psiRoad.pEff    <- occu(~Eff ~d.Road, MT_umf)
MT_m.psiTempmax.pEff <- occu(~Eff~ AvgMaxTemp, MT_umf)
MT_m.psiNDVI.pEff    <- occu(~Eff~ NDVI, MT_umf)
MT_m.psiTempmin.pEff <- occu(~Eff~ AvgMinTemp, MT_umf)
MT_m.psiElev.p1      <- occu(~1 ~Elev, MT_umf)
MT_detlist<-fitList(MT_mod0              ,
MT_m.psi1.pEff       ,
MT_m.psiElev.pEff    ,
MT_m.psiPrec.pEff    ,
MT_m.psiRoad.pEff    ,
MT_m.psiTempmax.pEff ,
MT_m.psiNDVI.pEff    ,
MT_m.psiTempmin.pEff ,
MT_m.psiElev.p1
)
# modSel compares AND ranks the models against each other!
modSel(MT_detlist)
sink("unicovariateModselAll.txt", append = TRUE)
print("Mountain Tapir Model Selection")
modSel(MT_detlist)
sink()
#read in tapir occurance records
AM_tapir<- readRDS("Lowland/tapir_AM.rds")
#read in effort table
AM_eff<- readRDS("Lowland/eff_AM.rds")
#read in tapir occurance records
AM_tapir<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/tapir_AM.rds")
#read in effort table
AM_eff<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/eff_AM.rds")
#read in covariate table
AM_cv<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Amazon (Lowland Tapir)/cv_t_AM_v2.csv")
#scale covariates
AM_cv<- cbind(AM_cv[,c(1:4)], round(scale(AM_cv[,5:ncol(AM_cv)]),3))
#ensure rownames match
rownames(AM_tapir) == rownames(AM_eff)
rownames(AM_eff) == AM_cv$Station
# Checking for sitecov correlations
as.dist(cor(AM_cv[,-c(1:4)]))
AM_umf<- unmarkedFrameOccu(y=AM_tapir, siteCovs=AM_cv, obsCovs=list(Eff=AM_eff))
summary(AM_umf) #67 sites with detection
# Running model with Eff as survey covariate
AM_m.psi1.pEff     <- occu(~Eff~1, AM_umf)
AM_m.psiElev.pEff  <- occu(~Eff~Elev , AM_umf)
AM_m.psiRoad.pEff  <- occu(~Eff~d.Road , AM_umf)
AM_m.psiNDVI.pEff  <- occu(~Eff~NDVI , AM_umf)
AM_m.psiTemp.pEff  <- occu(~Eff~Avg.Max.Temp , AM_umf)
AM_m.psiPrecip.pEff<- occu(~Eff~MAP , AM_umf)
AM_m.psiReg.pEff   <- occu(~Eff~Dataset , AM_umf)
AM_m.psiWat.pEff   <- occu(~Eff~Water , AM_umf)
AM_m.psiDC.pEff    <- occu(~Eff~DisjCore , AM_umf)
AM_m.psiPD.pEff    <- occu(~Eff~PatchDens , AM_umf)
AM_m.psiED.pEff    <- occu(~Eff~EdgeDens , AM_umf)
AM_m.psiRiver.pEff <- occu(~Eff~d.River, AM_umf)
AM_m.psiNPP.pEff   <- occu(~Eff~NPP , AM_umf)
AM_m.psiFor.pEff   <- occu(~Eff~Forest , AM_umf)
AM_m.psiHFI.pEff   <- occu(~Eff~HFI , AM_umf)
AM_m.psiTempmin.pEff  <- occu(~Eff~ Avg.Min.Temp, AM_umf)
##collect in fitList
AM_detlist<-fitList(AM_m.psi1.pEff     ,
AM_m.psiElev.pEff  ,
AM_m.psiRoad.pEff  ,
AM_m.psiNDVI.pEff  ,
AM_m.psiTemp.pEff  ,
AM_m.psiPrecip.pEff,
AM_m.psiReg.pEff   ,
AM_m.psiWat.pEff   ,
AM_m.psiDC.pEff    ,
AM_m.psiPD.pEff    ,
AM_m.psiED.pEff    ,
AM_m.psiRiver.pEff ,
AM_m.psiNPP.pEff   ,
AM_m.psiFor.pEff   ,
AM_m.psiHFI.pEff   ,
AM_m.psiTempmin.pEff
)
##do AIC model selection
modSel(AM_detlist)
sink("unicovariateModselAll.txt", append = TRUE)
print("Lowland Tapir Model Selection")
modSel(AM_detlist)
sink()
#occurance recs
CR_tapir<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Costa Rica (Baird Tapir)/Scripts/tapir_CR.rds")
#effort table
CR_eff<- readRDS("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Costa Rica (Baird Tapir)/Scripts/eff_CR.rds")
#covariates
CR_cv<- read.csv("C:/Users/chris/Documents/Research/Tapir-Research/all Tapir's data/Costa Rica (Baird Tapir)/cv_t3.csv")
CR_cv<- cbind(CR_cv[,2:5], round(scale(CR_cv[,6:ncol(CR_cv)]),3))
CR_umf<- unmarkedFrameOccu(y=CR_tapir, siteCovs=CR_cv, obsCovs=list(Eff=CR_eff))
summary(CR_umf)
#-----------------------------------------------------------------------
# Running models
CR_m.psi1.pEff		    <- occu(~Eff~1, CR_umf)
CR_m.psiElev.pEff	    <- occu(~Eff~Elev , CR_umf)
CR_m.psiRoad.pEff	    <- occu(~Eff~d.Road , CR_umf)
CR_m.psiTempmax.pEff  <- occu(~Eff~ Avg.Max.Temp, CR_umf)
CR_m.psiTempmax.pEff  <- occu(~Eff~ Avg.Max.Temp, CR_umf)
CR_m.psiNDVI.pEff	    <- occu(~Eff~ NDVI, CR_umf)
CR_m.pEff.psiPrec	    <- occu(~Eff ~Precip, CR_umf)
CR_m.psiTempmin.pEff  <- occu(~Eff~ Avg.Min.Temp, CR_umf)
CR_m.psiDC.pEff		    <- occu(~Eff~DisjCore ,CR_umf)
CR_m.psiPD.pEff		    <- occu(~Eff~PatchDens ,CR_umf)
CR_m.psiED.pEff		    <- occu(~Eff~EdgeDens ,CR_umf)
CR_m.psiRiver.pEff	  <- occu(~Eff~d.River ,CR_umf)
CR_m.psiNPP.pEff	    <- occu(~Eff~NPP ,CR_umf)
CR_m.psiHFI.pEff	    <- occu(~Eff~HFI ,CR_umf)
CR_m.psiFor.pEff	    <- occu(~Eff~Forest ,CR_umf)
##>> collect in fitList
CR_detlist<-fitList(CR_m.psi1.pEff		,
CR_m.psiElev.pEff	,
CR_m.psiRoad.pEff	,
CR_m.psiNDVI.pEff	,
CR_m.pEff.psiPrec	,
CR_m.psiTempmax.pEff,
CR_m.psiTempmin.pEff,
CR_m.psiDC.pEff		,
CR_m.psiPD.pEff		,
CR_m.psiED.pEff		,
CR_m.psiRiver.pEff	,
CR_m.psiNPP.pEff	,
CR_m.psiHFI.pEff	,
CR_m.psiFor.pEff
)
##do AIC model selection
modSel(CR_detlist)
sink("unicovariateModselAll.txt", append = TRUE)
print("Baird's Tapir Model Selection")
modSel(CR_detlist)
sink()
echo("h")
View(CR_m.psiElev.pEff)
